import datetime

import telebot
from telebot import types
import fp_parser
import funpay_database
from currency_converter import get_info
import cfg
from loguru import logger


bot = telebot.TeleBot(cfg.API)  # —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞


@bot.message_handler(commands=["start"])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_action_with_offers = types.KeyboardButton("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ—Ç–∞—Ö üìä")
    send_plot = types.KeyboardButton("üí∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω–µ üí∞")
    button_save_avg_price = types.KeyboardButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ä–µ–¥–Ω—É—é —Ü–µ–Ω—É")
    markup.add(button_action_with_offers, send_plot, button_save_avg_price)
    bot.send_message(
        message.chat.id,
        text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø  –±–æ—Ç –¥–ª—è —Å–±–æ—Ä–∞ —Ü–µ–Ω –Ω–∞ Funpay".format(
            message.from_user
        ),
        reply_markup=markup,
    )


@logger.catch
@bot.message_handler(content_types=["text"])
def bot_actions(message):
    if message.text == "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ—Ç–∞—Ö üìä":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_west_server = types.KeyboardButton("–ó–∞–ø–∞–¥–Ω—ã–π —Å–µ—Ä–≤–µ—Ä")
        button_east_server = types.KeyboardButton("–í–æ—Å—Ç–æ—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä")
        button_return_to_main_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(button_west_server, button_east_server, button_return_to_main_menu)
        bot.send_message(
            message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Å–µ—Ä–≤–µ—Ä", reply_markup=markup
        )

    elif message.text == "–ó–∞–ø–∞–¥–Ω—ã–π —Å–µ—Ä–≤–µ—Ä":
        cfg.server_id = 992

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_get_all_orders = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö –ª–æ—Ç–∞—Ö")
        button_filter_orders = types.KeyboardButton("–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ª–æ—Ç–æ–≤ –ø–æ —Ü–µ–Ω–µ")
        button_avg_price = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω–µ")
        button_return_to_main_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(
            button_get_all_orders,
            button_filter_orders,
            button_avg_price,
            button_return_to_main_menu,
        )
        bot.send_message(
            message.chat.id, text="–í—ã –≤—ã–±—Ä–∞–ª–∏ –ó–∞–ø–∞–¥–Ω—ã–π —Å–µ—Ä–≤–µ—Ä", reply_markup=markup
        )

    elif message.text == "–í–æ—Å—Ç–æ—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä":
        cfg.server_id = 8569

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_get_all_orders = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö –ª–æ—Ç–∞—Ö")
        button_filter_orders = types.KeyboardButton("–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ª–æ—Ç–æ–≤ –ø–æ —Ü–µ–Ω–µ")
        button_avg_price = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω–µ")
        button_return_to_main_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(
            button_get_all_orders,
            button_filter_orders,
            button_avg_price,
            button_return_to_main_menu,
        )
        bot.send_message(
            message.chat.id, text="–í—ã –≤—ã–±—Ä–∞–ª–∏ –í–æ—Å—Ç–æ—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä", reply_markup=markup
        )

    elif message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö –ª–æ—Ç–∞—Ö":
        fp_parser.get_all_orders_by_server(server_code=cfg.server_id)
        try:
            if cfg.server_id == 0:
                bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∑–∞–Ω–æ–≤–æ!")

            for i in fp_parser.get_all_orders_by_server(server_code=cfg.server_id):
                message_to_bot = f"–°–µ—Ä–≤–µ—Ä: {i[0]} \n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–µ–±—Ä–∞: {i[1]} \n–¶–µ–Ω–∞ –∑–∞ 1–∫–∫: {i[2]} \n–°—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ—Ç: {i[3]}"
                bot.send_message(message.chat.id, text=message_to_bot)
        except Exception as error:
            logger.exception(error)

    elif message.text == "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ª–æ—Ç–æ–≤ –ø–æ —Ü–µ–Ω–µ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_price = types.KeyboardButton("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É")
        button_return_to_main_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.row(button_price, button_return_to_main_menu)
        bot.send_message(
            message.chat.id, text="–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ü–µ–Ω–µ", reply_markup=markup
        )

    elif message.text == "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É":
        bot.register_next_step_handler(message, reply_to_user)

    elif message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω–µ":
        if cfg.server_id != 0:
            avg_price = fp_parser.get_avg_price(cfg.server_id)
            server_name = ""

            usd_rub, eur_rub = get_info()

            if cfg.server_id == 992:
                server_name = "WEST"
            elif cfg.server_id == 8569:
                server_name = "EAST"

            message_with_price = return_message(
                server_name, avg_price, usd_rub, eur_rub
            )

            bot.send_message(message.chat.id, message_with_price)
        else:
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∑–∞–Ω–æ–≤–æ!")

    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_action_with_offers = types.KeyboardButton("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ—Ç–∞—Ö üìä")
        send_plot = types.KeyboardButton("üí∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω–µ üí∞")
        markup.add(button_action_with_offers, send_plot)

        bot.send_message(
            message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup
        )

    elif message.text == "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ä–µ–¥–Ω—É—é —Ü–µ–Ω—É":
        avg_price = format(fp_parser.get_avg_price(server_code=992), "0.2f")
        date_now = datetime.date.today()
        date_now = str(date_now).split('-')
        db_connect = funpay_database.sql_connection()

        try:
            funpay_database.sqt_table_insert(db_connect, [992, float(avg_price), *date_now])
        except Exception as error:
            logger.error(error)

    elif message.text == '/help':
        try:
            help_message = '–¢—É—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–∫–ª–∞–º–∞'
            bot.send_message(message.chat.id, text=help_message)
        except Exception as error:
            logger.error(error)
    else:
        bot.send_message(
            message.chat.id, text="–ù–∞–ø–∏—à–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã!"
        )


def reply_to_user(message):  # –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    # –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—å—Å—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ü–µ–Ω–µ
    try:
        for i in fp_parser.get_orders_by_filter(
            float(message.text), server_code=cfg.server_id
        ):
            message_to_bot = f"–°–µ—Ä–≤–µ—Ä: {i[0]} \n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–µ–±—Ä–∞: {i[1]} \n–¶–µ–Ω–∞ –∑–∞ 1–∫–∫: {i[2]} \n–°—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ—Ç: {i[3]}"
            bot.send_message(message.chat.id, message_to_bot)

    except:  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
        bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")


def return_message(server_name, avg_price, usd_rub, eur_rub):
    message_with_price = f"""
                   –°–µ—Ä–≤–µ—Ä: {server_name}!
               *************
               *       –†—É–±–ª–∏      *
               *************
               –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ —Å –∫–æ–º–∏—Å—Å–∏–µ–π FunPay: {format(avg_price, '0.2f')} ‚ÇΩ
               –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏ FunPay: {format(avg_price * 0.825, '0.2f')} ‚ÇΩ
               *************
               *        USD         *
               *************
               –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ —Å –∫–æ–º–∏—Å—Å–∏–µ–π FunPay: {format(avg_price / usd_rub, '0.2f')} $
               –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏ FunPay: {format((avg_price / usd_rub) * 0.825, '0.2f')} $
               *************
               *        EUR         *
               *************
               –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ —Å –∫–æ–º–∏—Å—Å–∏–µ–π FunPay: {format(avg_price / eur_rub, '0.2f')} ‚Ç¨
               –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏ FunPay: {format((avg_price / eur_rub) * 0.825, '0.2f')} ‚Ç¨
           """
    return message_with_price


if __name__ == "__main__":
    try:
        logger.add(
            "out.log", backtrace=True, diagnose=True, retention="1 week"
        )  # Caution, may leak sensitive data in prod
        logger.info("–ë–æ—Ç –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É")
        bot.polling(none_stop=True)

    except Exception as error:
        logger.error(error)
